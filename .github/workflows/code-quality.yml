name: 🎯 Code Quality

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  code-quality:
    name: 🔍 Code Quality Checks
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Full history for better analysis

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: 📦 Install dependencies
        run: npm ci --legacy-peer-deps

      - name: 🔍 ESLint Analysis
        run: npm run lint -- --format=json --output-file=eslint-report.json || true

      - name: 📊 ESLint Report
        uses: actions/github-script@v7
        if: always()
        with:
          script: |
            const fs = require('fs');
            const path = require('path');

            try {
              if (fs.existsSync('eslint-report.json')) {
                const report = JSON.parse(fs.readFileSync('eslint-report.json', 'utf8'));
                const errors = report.filter(r => r.errorCount > 0);
                const warnings = report.filter(r => r.warningCount > 0);
                
                let comment = '## 🔍 ESLint Analysis Results\n\n';
                
                if (errors.length === 0 && warnings.length === 0) {
                  comment += '✅ **No ESLint issues found!** Great job!\n';
                } else {
                  if (errors.length > 0) {
                    comment += `❌ **${errors.length} files with errors:**\n`;
                    errors.forEach(file => {
                      comment += `- \`${file.filePath}\` (${file.errorCount} errors)\n`;
                    });
                    comment += '\n';
                  }
                  
                  if (warnings.length > 0) {
                    comment += `⚠️ **${warnings.length} files with warnings:**\n`;
                    warnings.forEach(file => {
                      comment += `- \`${file.filePath}\` (${file.warningCount} warnings)\n`;
                    });
                    comment += '\n';
                  }
                  
                  comment += 'Please fix these issues before merging.\n';
                }
                
                github.rest.issues.createComment({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body: comment
                });
              }
            } catch (error) {
              console.log('Error processing ESLint report:', error);
            }

      - name: 🎨 Code Style Check
        run: |
          echo "## 🎨 Code Style Analysis" >> style-report.md
          echo "Checking code formatting with Prettier..." >> style-report.md
          echo "" >> style-report.md

          # Check formatting
          if npx prettier --check "**/*.{js,jsx,ts,tsx,json,css,md}" 2>/dev/null; then
            echo "✅ **All files are properly formatted!**" >> style-report.md
          else
            echo "❌ **Some files need formatting:**" >> style-report.md
            echo "" >> style-report.md
            echo "Run the following command to fix formatting:" >> style-report.md
            echo '```bash' >> style-report.md
            echo 'npx prettier --write "**/*.{js,jsx,ts,tsx,json,css,md}"' >> style-report.md
            echo '```' >> style-report.md
          fi

      - name: 📝 TypeScript Coverage
        run: |
          echo "## 📝 TypeScript Analysis" >> typescript-report.md
          echo "Checking TypeScript types..." >> typescript-report.md
          echo "" >> style-report.md

          if npx tsc --noEmit; then
            echo "✅ **All TypeScript types are valid!**" >> typescript-report.md
          else
            echo "❌ **TypeScript errors found:**" >> typescript-report.md
            echo "Please fix the TypeScript errors before merging." >> typescript-report.md
          fi

      - name: 📤 Upload reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: code-quality-reports
          path: |
            eslint-report.json
            style-report.md
            typescript-report.md
